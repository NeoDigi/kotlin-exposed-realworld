image: java:8-jdk

services:
  - name: postgres:10
    alias: postgres

variables:
  POSTGRES_USER: realworld
  POSTGRES_PASSWORD: realword
  POSTGRES_DB: realworld
  SPRING_DATASOURCE_URL: jdbc:postgresql://postgres/$POSTGRES_DB
  SPRING_DATASOURCE_USERNAME: $POSTGRES_USER
  SPRING_DATASOURCE_PASSWORD: $POSTGRES_PASSWORD
  MAVEN_OPTS: "-Dmaven.repo.local=$MAVEN_USER_HOME"

stages:
  - test
  - build
  - package
  - acceptance_tests

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - export MAVEN_USER_HOME=`pwd`/.maven

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches
    - .maven
    - target/

build:
  stage: build
  script:
    - ./gradlew assemble
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 1 week

test:
  stage: test
  script:
    - ./gradlew check
    - ./mvnw $MAVEN_OPTS test

push_image:
  stage: package
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" . -f docker/app.Dockerfile
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"

acceptance_tests:
  image:
    name: docker:latest
  tags:
    - aws
  stage: acceptance_tests
  when: manual
  services:
    - docker:dind
  before_script:
    - apk add --no-cache py-pip bash git gettext
    - pip install docker-compose
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - cd docker && ./run-tests.sh
  artifacts:
    reports:
      junit: acceptance/newman/newman-*.xml
